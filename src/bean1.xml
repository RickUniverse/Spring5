<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
                           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
                           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!--
        配置对象创建源
    -->
    <bean id="user" class="com.spring5.test.User"/>


    <!--
        配置对象创建源和注入相关
        set方式注入

        p:bname="asdf" p:bauthor="sdfd" : p空间方式注入
    -->
    <bean id="book" class="com.spring5.ioc.Book" p:bname="asdf" p:bauthor="sdfd">
        <!--配置属性-->
<!--        <property name="bname" value="超级无敌"/>-->
<!--        <property name="bauthor" value="mr.zhang"/>-->
    </bean>
    <!--
        有参构造方式注入
    -->
    <bean id="orders" class="com.spring5.ioc.Orders">
        <constructor-arg name="oid" value="1"/>
        <constructor-arg name="oname" value="qweeee"/>
        <!--空值-->
        <property name="oaddress">
            <null/>
        </property>

        <!--特殊符号转义-->
        <property name="desc">
            <value>
                <![CDATA[<<这是一个备注>>]]>
            </value>
        </property>
    </bean>



    <!--
        注入属性：外部bean
    -->
    <bean id="userDaoImp" class="com.spring5.dao.impl.UserDaoImp"></bean>
    <bean id="userService" class="com.spring5.service.UserService">
        <!--
            注入userDao对象
        -->
        <property name="userDao" ref="userDaoImp"></property>
    </bean>


    <!--
        注入属性：内部bean
    -->
    <bean id="emp" class="com.spring5.ioc.Employee">
        <property name="eid" value="1"/>
        <property name="ename" value="张三"/>
        <!--设置对象类型属性-->
        <property name="dept">
            <bean id="dept" class="com.spring5.ioc.Department">
                <property name="dname" value="保安部"/>
            </bean>
        </property>
    </bean>

    <!--级联赋值-->
    <bean id="emp2" class="com.spring5.ioc.Employee">
        <property name="eid" value="1"/>
        <property name="ename" value="张三"/>
        <!--级联赋值-->
        <property name="dept" ref="dept"/>
        <!--修改值-->
        <property name="dept.dname" value="超级无敌无聊部"/>
    </bean>
    <bean id="dept" class="com.spring5.ioc.Department">
        <property name="dname" value="安保部"/>
    </bean>



    <!--集合类型注入-->
    <bean id="collection" class="com.spring5.ioc.collection.CollectionType">
        <!--数组类型-->
        <property name="arrays">
            <array>
                <value>array1</value>
                <value>array2</value>
            </array>
        </property>
        <!--list类型-->
        <property name="lists">
            <list>
                <value>list1</value>
                <value>list2</value>
            </list>
        </property>
        <!--map类型-->
        <property name="maps">
            <map>
                <entry key="key1" value="value1"/>
                <entry key="key2" value="value2"/>
            </map>
        </property>
        <!--set类型-->
        <property name="sets">
            <set>
                <value>set1</value>
                <value>set2</value>
            </set>
        </property>
    </bean>

    <!--
        共有的部分提取出来
    -->

    <util:map id="mapPublic">
        <entry key="1" value-ref="student1"/>
        <entry key="2" value-ref="student2"/>
    </util:map>
    <!--Student 的bean声明-->
    <bean id="student1" class="com.spring5.ioc.collection.Student">
        <property name="sname" value="张三1"></property>
    </bean>
    <bean id="student2" class="com.spring5.ioc.collection.Student">
        <property name="sname" value="张三2"></property>
    </bean>

    <!--注入共有的集合，对象参考引用-->
    <!--
        scope="prototype" 表示创建多实例对象
    -->
    <bean id="collection2" class="com.spring5.ioc.collection.CollectionType" scope="prototype">
        <property name="studentMap" ref="mapPublic"/>
    </bean>

    <!--Factory Bean-->
    <bean id="myBean" class="com.spring5.ioc.factorybean.MyBean"/>


<!--

    &lt;!&ndash;bean 的生命周期&ndash;&gt;
    <bean id="objects" class="com.spring5.ioc.life.Objects" init-method="initMethod" destroy-method="destoryMethod">
        <property name="name" value="123"/>
    </bean>

    &lt;!&ndash;配置后置处理器&ndash;&gt;
    <bean id="myBeanPost" class="com.spring5.ioc.life.MyBeanPost"/>
-->

    <!--
        自动装配
            autowire="byName" ：根据属性名进行自动装配
            autowire="byType" ： 根据类型进行自动装配
    -->
    <bean id="autowrite" class="com.spring5.ioc.autowrite.Employee" autowire="byType"/>
    <bean id="deptAutoWrite" class="com.spring5.ioc.autowrite.Department"/>




    <!--设置组件扫描扫描哪些类，那种类型的注解
        use-default-filters="false" 表示使用自己定义的filter过滤
    -->
<!--    <context:component-scan base-package="com.spring5.ioc.annotation" use-default-filters="false">-->
<!--        &lt;!&ndash;表示扫描 注解类，且注解类型为Service的类&ndash;&gt;-->
<!--        <context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>-->
<!--    </context:component-scan>-->
<!--    <context:component-scan base-package="com.spring5.ioc.annotation" >-->
<!--        &lt;!&ndash;表示排除哪些类不进行扫描&ndash;&gt;-->
<!--        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>-->
<!--    </context:component-scan>-->

    <!--开启组件扫描-->
    <context:component-scan base-package="com.spring5.ioc.annotation"></context:component-scan>


    <!--开启组件扫描-->
    <context:component-scan base-package="com.spring5.aop"></context:component-scan>
    <!--开启aspet生成代理对象-->
    <aop:aspectj-autoproxy></aop:aspectj-autoproxy>


    <!--配置增强类-->
    <bean id="bookAop" class="com.spring5.aop.aspect.xml.Book"></bean>
    <bean id="bookProxy" class="com.spring5.aop.aspect.xml.BookProxy"></bean>

    <!--配置aop增强-->
    <aop:config>
        <!--切入点-->
        <aop:pointcut id="p" expression="execution(* com.spring5.aop.aspect.xml.Book.buy(..))"/>
        <!--配置切面-->
        <aop:aspect ref="bookProxy">
            <!--配置到某一个切入点内-->
            <aop:before method="before" pointcut-ref="p"/>
        </aop:aspect>
    </aop:config>




    <!--引入外部配置文件-->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <!--配置德鲁伊数据库连接池-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${prop.driverClassName}"/>
        <property name="url" value="${prop.url}"/>
        <property name="username" value="${prop.username}"/>
        <property name="password" value="${prop.password}"/>
    </bean>
    <!--
        jdbcTemplate
        配置bean
    -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <!--配置数据库连接池 bean引用-->
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--组件扫描-->
    <context:component-scan base-package="com.spring5.jdbctemplate"/>
    <context:component-scan base-package="com.spring5.transcation"/>

    <!--
        创建事务管理器
    -->
    <bean id="transcationManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--设置数据连接池源-->
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--开启事务注解-->
    <tx:annotation-driven transaction-manager="transcationManager"/>

    <!--2，xml方式配置事务-->
    <!--配置通知-->
    <tx:advice id="txadvice" transaction-manager="transcationManager">
        <!--配置事务参数-->
        <tx:attributes>
            <!--指定那种规则的方法上添加事务-->
            <tx:method name="transferAccount" propagation="REQUIRED" timeout="-1"/>
<!--            <tx:method name="transfer*" propagation="REQUIRED"/>-->
        </tx:attributes>
    </tx:advice>
    <!--配置切入点和切面-->
    <aop:config>
        <!--配置切入点-->
        <aop:pointcut id="pt" expression="execution(* com.spring5.transcation.service.UserService.*(..))"/>
        <!--配置切面-->
        <aop:advisor advice-ref="txadvice" pointcut-ref="pt"/>
    </aop:config>

</beans>